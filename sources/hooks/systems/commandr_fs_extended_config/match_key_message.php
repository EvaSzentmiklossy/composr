<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2015

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    match_key_permissions
 */

/**
 * Hook class.
 */
class Hook_commandr_fs_extended_config__match_key_message
{
    /**
     * Standard commandr_fs date fetch function for resource-fs hooks. Defined when getting an edit date is not easy.
     *
     * @return ?TIME The edit date or add date, whichever is higher (null: could not find one)
     */
    public function get_edit_date()
    {
        $query = 'SELECT MAX(date_and_time) FROM ' . get_table_prefix() . 'adminlogs WHERE ' . db_string_equal_to('the_type', 'PAGE_MATCH_KEY_ACCESS');
        return $GLOBALS['SITE_DB']->query_value_if_there($query);
    }

    /**
     * Standard commandr_fs file reading function for Commandr FS hooks.
     *
     * @param  array $meta_dir The current meta-directory path
     * @param  string $meta_root_node The root node of the current meta-directory
     * @param  string $file_name The file name
     * @param  object $commandr_fs A reference to the Commandr filesystem object
     * @return ~string The file contents (false: failure)
     */
    public function read_file($meta_dir, $meta_root_node, $file_name, &$commandr_fs)
    {
        require_code('xml_storage');

        $rows = $GLOBALS['SITE_DB']->query_select('match_key_messages', array('k_message', 'k_match_key'), null, 'ORDER BY id');
        $rows2 = array();
        foreach ($rows as $row) {
            $row2 = array('message' => '<lang>' . get_translated_text_xml($row['k_message'], 'message', $GLOBALS['SITE_DB']) . '</lang>', 'match_key' => $row['k_match_key']);
            $rows2[] = $row2;
        }
        return json_encode($rows2);
    }

    /**
     * Standard commandr_fs file writing function for Commandr FS hooks.
     *
     * @param  array $meta_dir The current meta-directory path
     * @param  string $meta_root_node The root node of the current meta-directory
     * @param  string $file_name The file name
     * @param  string $contents The new file contents
     * @param  object $commandr_fs A reference to the Commandr filesystem object
     * @return boolean Success?
     */
    public function write_file($meta_dir, $meta_root_node, $file_name, $contents, &$commandr_fs)
    {
        require_code('xml_storage');

        $rows = $GLOBALS['SITE_DB']->query_select('match_key_messages', array('k_message'));
        foreach ($rows as $row) {
            delete_lang($row['k_message']);
        }
        $GLOBALS['SITE_DB']->query_delete('match_key_messages');

        $rows = @json_decode($contents);
        if ($rows === false) {
            return false;
        }
        foreach ($rows as $row) {
            $row2 = array('k_match_key' => $row['k_match_key']);
            $row2 += insert_lang_xml('k_message', $row['k_message']);
            $GLOBALS['SITE_DB']->query_insert('match_key_messages', $row2);
        }
        return true;
    }
}
