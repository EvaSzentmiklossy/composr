<?php /*

 Composr
 Copyright (c) ocProducts, 2004-2016

 See text/EN/licence.txt for full licencing information.


 NOTE TO PROGRAMMERS:
   Do not edit this file. If you need to make changes, save your changed file to the appropriate *_custom folder
   **** If you ignore this advice, then your website upgrades (e.g. for bug fixes) will likely kill your changes ****

*/

/**
 * @license    http://opensource.org/licenses/cpal_1.0 Common Public Attribution License
 * @copyright  ocProducts Ltd
 * @package    staff_messaging
 */

/**
 * Block class.
 */
class Block_main_contact_us
{
    /**
     * Find details of the block.
     *
     * @return ?array Map of block info (null: block is disabled).
     */
    public function info()
    {
        $info = array();
        $info['author'] = 'Chris Graham';
        $info['organisation'] = 'ocProducts';
        $info['hacked_by'] = null;
        $info['hack_version'] = null;
        $info['version'] = 2;
        $info['locked'] = false;
        $info['parameters'] = array('param', 'title', 'email_optional', 'body_prefix', 'body_suffix', 'subject_prefix', 'subject_suffix', 'redirect', 'guid');
        return $info;
    }

    /**
     * Execute the block.
     *
     * @param  array $map A map of parameters.
     * @return Tempcode The result of execution.
     */
    public function run($map)
    {
        require_lang('messaging');
        require_code('feedback');
        require_code('mail');

        $message = new Tempcode();

        // Options...

        if (addon_installed('captcha')) {
            require_code('captcha');
            $use_captcha = ((get_option('captcha_on_feedback') == '1') && (use_captcha()));
        } else {
            $use_captcha = false;
        }

        $body_prefix = array_key_exists('body_prefix', $map) ? $map['body_prefix'] : '';
        $body_suffix = array_key_exists('body_suffix', $map) ? $map['body_suffix'] : '';
        $subject_prefix = array_key_exists('subject_prefix', $map) ? $map['subject_prefix'] : '';
        $subject_suffix = array_key_exists('subject_suffix', $map) ? $map['subject_suffix'] : '';

        $type = array_key_exists('param', $map) ? $map['param'] : do_lang('GENERAL');
        $box_title = array_key_exists('title', $map) ? $map['title'] : do_lang('CONTACT_US');
        $email_optional = array_key_exists('email_optional', $map) ? (intval($map['email_optional']) == 1) : true;

        $block_id = md5(serialize($map));

        // Submission...

        if ((post_param_integer('_comment_form_post', 0) == 1) && (post_param_string('_block_id', '') == $block_id)) {
            $message = new Tempcode();/*Used to be written out here*/

            // Check CAPTCHA
            if ($use_captcha) {
                enforce_captcha();
            }

            list($subject, $body, , , $from_email, $from_name) = _form_to_email(null, $subject_prefix, $subject_suffix, $body_prefix, $body_suffix);

            // Checking
            if ($from_email != '') {
                require_code('type_sanitisation');
                if (!is_email_address($from_email)) {
                    return paragraph(do_lang_tempcode('INVALID_EMAIL_ADDRESS'), '', 'red_alert');
                }
            }

            // Handle notifications
            require_code('notifications');
            $notification_subject = do_lang('CONTACT_US_NOTIFICATION_SUBJECT', $subject, null, null, get_site_default_lang());
            $notification_message = do_notification_lang('CONTACT_US_NOTIFICATION_MESSAGE', comcode_escape(get_site_name()), comcode_escape($from_name), array($body, comcode_escape($type), strval(get_member())), get_site_default_lang());
            $id = uniqid('', false);
            require_code('lookup');
            $user_metadata_path = save_user_metadata();
            dispatch_notification('messaging', $type . '_' . $id, $notification_subject, $notification_message, null, null, 3, true, false, null, null, '', '', '', '', array($user_metadata_path => 'user_metadata.txt'));

            // Send standard confirmation email to current user
            if ($from_email != '' && get_option('message_received_emails') == '1') {
                require_code('mail');
                mail_wrap(do_lang('YOUR_MESSAGE_WAS_SENT_SUBJECT', $subject), do_lang('YOUR_MESSAGE_WAS_SENT_BODY', $body), array($from_email), null, '', '', 3, null, false, get_member());
            }

            // Redirect/messaging
            $redirect = array_key_exists('redirect', $map) ? $map['redirect'] : '';
            if ($redirect != '') {
                $redirect = page_link_to_url($redirect);
                require_code('site2');
                assign_refresh($redirect, 0.0);
            } else {
                attach_message(do_lang_tempcode('MESSAGE_SENT'), 'inform');
            }

            // Tidy up
            decache('main_staff_checklist');
        }

        // Form...

        $out = new Tempcode();
        if (get_forum_type() != 'none') { // If cns_forum not installed, will still work
            $forum_id = $GLOBALS['FORUM_DRIVER']->forum_id_from_name(get_option('messaging_forum_name'));
            if ($forum_id !== null) {
                $em = $GLOBALS['FORUM_DRIVER']->get_emoticon_chooser();

                require_javascript('editing');
                require_javascript('checking');

                $comment_url = get_self_url();

                if (addon_installed('captcha')) {
                    require_code('captcha');
                    $use_captcha = ((get_option('captcha_on_feedback') == '1') && (use_captcha()));
                    if ($use_captcha) {
                        generate_captcha();
                    }
                } else {
                    $use_captcha = false;
                }

                $default_text = mixed();
                $redirect = get_param_string('redirect', '', true);
                if ($redirect != '') {
                    $default_text = do_lang('COMMENTS_DEFAULT_TEXT', $redirect);
                }

                $hidden = new Tempcode();
                $hidden->attach(form_input_hidden('_block_id', $block_id));

                $guid = isset($map['guid']) ? $map['guid'] : '31fe96c5ec3b609fbf19595a1de3886f';

                $comment_details = do_template('COMMENTS_POSTING_FORM', array(
                    '_GUID' => $guid,
                    'DEFAULT_TEXT' => $default_text,
                    'JOIN_BITS' => '',
                    'FIRST_POST_URL' => '',
                    'FIRST_POST' => '',
                    'USE_CAPTCHA' => $use_captcha,
                    'EMAIL_OPTIONAL' => $email_optional,
                    'POST_WARNING' => '',
                    'COMMENT_TEXT' => '',
                    'GET_EMAIL' => true,
                    'GET_TITLE' => true,
                    'EM' => $em,
                    'DISPLAY' => 'block',
                    'COMMENT_URL' => $comment_url,
                    'TITLE' => $box_title,
                    'HIDDEN' => $hidden,
                    'SUBMIT_NAME' => do_lang_tempcode('SEND'),
                    'SUBMIT_ICON' => 'buttons__send',
                    'SKIP_PREVIEW' => true,
                ));

                $notifications_enabled = null;
                $notification_change_url = null;
                if (has_actual_page_access(get_member(), 'admin_messaging')) {
                    require_code('notifications');
                    $notifications_enabled = notifications_enabled('messaging', 'type', get_member());
                }

                $out = do_template('BLOCK_MAIN_CONTACT_US', array(
                    '_GUID' => $guid,
                    'COMMENT_DETAILS' => $comment_details,
                    'MESSAGE' => $message,
                    'NOTIFICATIONS_ENABLED' => $notifications_enabled,
                    'TYPE' => $type,
                ));
            }
        }

        return $out;
    }
}
